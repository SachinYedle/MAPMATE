package com.example.admin1.locationsharing.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.admin1.locationsharing.db.dao.Contacts;
import com.example.admin1.locationsharing.db.dao.UserLastKnownLocation;
import com.example.admin1.locationsharing.db.dao.UserLocations;

import com.example.admin1.locationsharing.db.dao.ContactsDao;
import com.example.admin1.locationsharing.db.dao.UserLastKnownLocationDao;
import com.example.admin1.locationsharing.db.dao.UserLocationsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig contactsDaoConfig;
    private final DaoConfig userLastKnownLocationDaoConfig;
    private final DaoConfig userLocationsDaoConfig;

    private final ContactsDao contactsDao;
    private final UserLastKnownLocationDao userLastKnownLocationDao;
    private final UserLocationsDao userLocationsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        contactsDaoConfig = daoConfigMap.get(ContactsDao.class).clone();
        contactsDaoConfig.initIdentityScope(type);

        userLastKnownLocationDaoConfig = daoConfigMap.get(UserLastKnownLocationDao.class).clone();
        userLastKnownLocationDaoConfig.initIdentityScope(type);

        userLocationsDaoConfig = daoConfigMap.get(UserLocationsDao.class).clone();
        userLocationsDaoConfig.initIdentityScope(type);

        contactsDao = new ContactsDao(contactsDaoConfig, this);
        userLastKnownLocationDao = new UserLastKnownLocationDao(userLastKnownLocationDaoConfig, this);
        userLocationsDao = new UserLocationsDao(userLocationsDaoConfig, this);

        registerDao(Contacts.class, contactsDao);
        registerDao(UserLastKnownLocation.class, userLastKnownLocationDao);
        registerDao(UserLocations.class, userLocationsDao);
    }
    
    public void clear() {
        contactsDaoConfig.getIdentityScope().clear();
        userLastKnownLocationDaoConfig.getIdentityScope().clear();
        userLocationsDaoConfig.getIdentityScope().clear();
    }

    public ContactsDao getContactsDao() {
        return contactsDao;
    }

    public UserLastKnownLocationDao getUserLastKnownLocationDao() {
        return userLastKnownLocationDao;
    }

    public UserLocationsDao getUserLocationsDao() {
        return userLocationsDao;
    }

}
