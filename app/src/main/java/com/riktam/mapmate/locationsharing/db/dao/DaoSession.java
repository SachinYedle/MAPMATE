package com.riktam.mapmate.locationsharing.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.riktam.mapmate.locationsharing.db.dao.Friends;
import com.riktam.mapmate.locationsharing.db.dao.UserLastKnownLocation;
import com.riktam.mapmate.locationsharing.db.dao.UserLocations;
import com.riktam.mapmate.locationsharing.db.dao.UserGmailFriends;

import com.riktam.mapmate.locationsharing.db.dao.FriendsDao;
import com.riktam.mapmate.locationsharing.db.dao.UserLastKnownLocationDao;
import com.riktam.mapmate.locationsharing.db.dao.UserLocationsDao;
import com.riktam.mapmate.locationsharing.db.dao.UserGmailFriendsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig friendsDaoConfig;
    private final DaoConfig userLastKnownLocationDaoConfig;
    private final DaoConfig userLocationsDaoConfig;
    private final DaoConfig userGmailFriendsDaoConfig;

    private final FriendsDao friendsDao;
    private final UserLastKnownLocationDao userLastKnownLocationDao;
    private final UserLocationsDao userLocationsDao;
    private final UserGmailFriendsDao userGmailFriendsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        friendsDaoConfig = daoConfigMap.get(FriendsDao.class).clone();
        friendsDaoConfig.initIdentityScope(type);

        userLastKnownLocationDaoConfig = daoConfigMap.get(UserLastKnownLocationDao.class).clone();
        userLastKnownLocationDaoConfig.initIdentityScope(type);

        userLocationsDaoConfig = daoConfigMap.get(UserLocationsDao.class).clone();
        userLocationsDaoConfig.initIdentityScope(type);

        userGmailFriendsDaoConfig = daoConfigMap.get(UserGmailFriendsDao.class).clone();
        userGmailFriendsDaoConfig.initIdentityScope(type);

        friendsDao = new FriendsDao(friendsDaoConfig, this);
        userLastKnownLocationDao = new UserLastKnownLocationDao(userLastKnownLocationDaoConfig, this);
        userLocationsDao = new UserLocationsDao(userLocationsDaoConfig, this);
        userGmailFriendsDao = new UserGmailFriendsDao(userGmailFriendsDaoConfig, this);

        registerDao(Friends.class, friendsDao);
        registerDao(UserLastKnownLocation.class, userLastKnownLocationDao);
        registerDao(UserLocations.class, userLocationsDao);
        registerDao(UserGmailFriends.class, userGmailFriendsDao);
    }
    
    public void clear() {
        friendsDaoConfig.getIdentityScope().clear();
        userLastKnownLocationDaoConfig.getIdentityScope().clear();
        userLocationsDaoConfig.getIdentityScope().clear();
        userGmailFriendsDaoConfig.getIdentityScope().clear();
    }

    public FriendsDao getFriendsDao() {
        return friendsDao;
    }

    public UserLastKnownLocationDao getUserLastKnownLocationDao() {
        return userLastKnownLocationDao;
    }

    public UserLocationsDao getUserLocationsDao() {
        return userLocationsDao;
    }

    public UserGmailFriendsDao getUserGmailFriendsDao() {
        return userGmailFriendsDao;
    }

}
